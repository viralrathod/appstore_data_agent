identify_developer_name:
  description: >
    Given the indicative developer name '{indicative_developer_name}', identify the full and correct name as it appears on the Apple App Store.
    For example, if the input is "Nintenddo", the output should be "Nintendo Co., Ltd.".
  expected_output: >
    A string representing the full and correct game developer name on the Apple App Store, or "N/A" if not found.
  agent: researcher

find_developer_url:
  description: >
    Given the full and correct game developer name, find an Game Developer Apple App Store URL.
    This URL will be used for the game information scraping task.
  expected_output: >
    A string representing an Apple App Store URL for the identified developer, or "N/A" if no URL is found.
  agent: researcher

scrape_game_info:
  description: >
    Given the full and correct game developer name AND an App Store URL the game developer, scrape all available game application information from the Apple App Store.
    Generate just one CSV file: `game_center_games.csv` (all games including free to play as well as paid).
  expected_output: >
    A string indicating the success or failure of scraping and CSV file creation, including the name of the generated CSV file.
  agent: researcher

reporting_task:
  description: >
    Review the scraped game data from the generated CSV file (game_center_games.csv) and generate a comprehensive report.
    The report should include an overview of the developer's games, key metrics (ratings, size, price, genre), and Game Center integration details (achievements, leaderboards).
  expected_output: >
    A fully fledged report in markdown format (`report.md`) with the main topics, each with a full section of information, based on the analysis of the CSV files. Do not use '```' in the report.
  agent: reporting_analyst
